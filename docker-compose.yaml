version: '3'
services:
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: ${NODE_ENV}
    command: yarn start:${NODE_ENV} api
    env_file:
      - ./apps/api/.env
    ports:
      - 4000:4000
    volumes:
      - ./apps/api:/usr/src/app/apps/api:z
      - ./libs/common:/usr/src/app/libs/common:z
    depends_on:
      - mysql
      - nats
      - user

  user:
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: ${NODE_ENV}
    command: yarn start:${NODE_ENV} user
    env_file:
      - ./.env
      - ./apps/user/.env
    ports:
      - 4001:4001
    volumes:
      - ./apps/user:/usr/src/app/apps/user:z
      - ./libs/common:/usr/src/app/libs/common:z
    depends_on:
      - mysql
      - nats

  transfer:
    build:
      context: .
      dockerfile: ./apps/transfer/Dockerfile
      target: ${NODE_ENV}
    command: yarn start:${NODE_ENV} transfer
    env_file:
      - ./.env
      - ./apps/transfer/.env
    ports:
      - 4002:4002
    volumes:
      - ./apps/transfer:/usr/src/app/apps/transfer:z
      - ./libs/common:/usr/src/app/libs/common:z
    depends_on:
      - mysql
      - nats

  nats:
    image: nats:latest
    ports:
      - 4222:4222
      - 8222:8222
      - 6222:6222

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_TCP_PORT: ${DB_PORT}
      TZ: ${DB_TZ}
    command:
      - --default-authentication-plugin=mysql_native_password
      - --default-time-zone=+09:00
      # - --init-file=/data/application/init.sql # for init sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./databases/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./databases/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./databases/mysql/init-for-test.sql:/data/application/init.sql # for init sql
    ports:
      - '3306:3306'
    restart: always

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - redis:/datas

volumes:
  mysql_data:
    driver: local
  # redis:
  #   driver: local
